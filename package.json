{
  "name": "zenchat",
  "displayName": "ZenChat - AI Coding Assistant",
  "description": "Context-aware AI coding assistant powered by Claude. Features code understanding, bug fixing, refactoring, testing, and more.",
  "version": "1.0.1",
  "publisher": "khanhromvn",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/khanhromvn/zenchat.git"
  },
  "icon": "images/icon.png",
  "engines": {
    "vscode": "^1.50.0"
  },
  "extensionDependencies": [
    "khanhromvn.copy-path-with-code"
  ],
  "categories": [
    "Programming Languages",
    "Machine Learning",
    "Other"
  ],
  "keywords": [
    "ai",
    "claude",
    "copilot",
    "coding assistant",
    "code generation",
    "refactoring",
    "testing",
    "documentation"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "zenchat-container",
          "title": "ZenChat",
          "icon": "$(robot)"
        }
      ]
    },
    "views": {
      "zenchat-container": [
        {
          "type": "webview",
          "id": "websocketView",
          "name": "Chat"
        }
      ]
    },
    "commands": [
      {
        "command": "zenchat.startServer",
        "title": "ZenChat: Start Server"
      },
      {
        "command": "zenchat.stopServer",
        "title": "ZenChat: Stop Server"
      },
      {
        "command": "zenchat.restartServer",
        "title": "ZenChat: Restart Server"
      },
      {
        "command": "zenchat.explainCode",
        "title": "ZenChat: Explain Code",
        "icon": "$(question)"
      },
      {
        "command": "zenchat.fixCode",
        "title": "ZenChat: Fix Code",
        "icon": "$(wrench)"
      },
      {
        "command": "zenchat.refactorCode",
        "title": "ZenChat: Refactor Code",
        "icon": "$(rocket)"
      },
      {
        "command": "zenchat.generateTests",
        "title": "ZenChat: Generate Tests",
        "icon": "$(beaker)"
      },
      {
        "command": "zenchat.addDocumentation",
        "title": "ZenChat: Add Documentation",
        "icon": "$(book)"
      },
      {
        "command": "zenchat.editCode",
        "title": "ZenChat: Edit Code",
        "icon": "$(edit)"
      },
      {
        "command": "zenchat.chat",
        "title": "ZenChat: Chat",
        "icon": "$(comment)"
      },
      {
        "command": "zenchat.showServerPort",
        "title": "ZenChat: Show Server Port Info"
      },
      {
        "command": "zenchat.connectToPort",
        "title": "ZenChat: Connect to Specific Port"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "submenu": "zenchat.editorMenu",
          "group": "1_modification"
        }
      ],
      "zenchat.editorMenu": [
        {
          "command": "zenchat.explainCode",
          "when": "editorHasSelection",
          "group": "1_understand"
        },
        {
          "command": "zenchat.fixCode",
          "when": "editorHasSelection",
          "group": "2_improve"
        },
        {
          "command": "zenchat.refactorCode",
          "when": "editorHasSelection",
          "group": "2_improve"
        },
        {
          "command": "zenchat.generateTests",
          "when": "editorHasSelection",
          "group": "3_generate"
        },
        {
          "command": "zenchat.addDocumentation",
          "when": "editorHasSelection",
          "group": "3_generate"
        },
        {
          "command": "zenchat.editCode",
          "when": "editorHasSelection",
          "group": "4_custom"
        },
        {
          "command": "zenchat.chat",
          "group": "4_custom"
        }
      ],
      "commandPalette": [
        {
          "command": "zenchat.explainCode",
          "when": "editorHasSelection"
        },
        {
          "command": "zenchat.fixCode",
          "when": "editorHasSelection"
        },
        {
          "command": "zenchat.refactorCode",
          "when": "editorHasSelection"
        },
        {
          "command": "zenchat.generateTests",
          "when": "editorHasSelection"
        },
        {
          "command": "zenchat.addDocumentation",
          "when": "editorHasSelection"
        },
        {
          "command": "zenchat.editCode",
          "when": "editorHasSelection"
        }
      ]
    },
    "submenus": [
      {
        "id": "zenchat.editorMenu",
        "label": "ZenChat"
      }
    ],
    "keybindings": [
      {
        "command": "zenchat.chat",
        "key": "ctrl+shift+l",
        "mac": "cmd+shift+l"
      },
      {
        "command": "zenchat.explainCode",
        "key": "ctrl+shift+e",
        "mac": "cmd+shift+e",
        "when": "editorHasSelection"
      },
      {
        "command": "zenchat.fixCode",
        "key": "ctrl+shift+f",
        "mac": "cmd+shift+f",
        "when": "editorHasSelection"
      },
      {
        "command": "zenchat.editCode",
        "key": "ctrl+shift+k",
        "mac": "cmd+shift+k",
        "when": "editorHasSelection"
      }
    ],
    "configuration": {
      "title": "ZenChat",
      "properties": {
        "orbitAI.maxContextTokens": {
          "type": "number",
          "default": 100000,
          "description": "Maximum number of tokens to include in context"
        },
        "orbitAI.autoFormatCode": {
          "type": "boolean",
          "default": true,
          "description": "Automatically format code after applying changes"
        },
        "orbitAI.previewChangesBeforeApplying": {
          "type": "boolean",
          "default": true,
          "description": "Show diff preview before applying code changes"
        },
        "orbitAI.includeOpenFiles": {
          "type": "boolean",
          "default": true,
          "description": "Include open files in context"
        },
        "orbitAI.includeDiagnostics": {
          "type": "boolean",
          "default": true,
          "description": "Include errors and warnings in context"
        },
        "orbitAI.maxOpenFiles": {
          "type": "number",
          "default": 10,
          "description": "Maximum number of open files to include in context"
        },
        "orbitAI.serverPort": {
          "type": "number",
          "default": 3031,
          "description": "WebSocket server port"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "lint": "eslint src",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/node": "20.x",
    "@types/vscode": "^1.50.0",
    "@types/ws": "^8.18.1",
    "@typescript-eslint/eslint-plugin": "^8.28.0",
    "@typescript-eslint/parser": "^8.28.0",
    "eslint": "^9.23.0",
    "ts-loader": "^9.5.2",
    "typescript": "^5.8.2",
    "webpack": "^5.98.0",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "ws": "^8.18.3"
  }
}
